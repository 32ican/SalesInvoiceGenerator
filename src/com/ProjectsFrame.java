/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import com.dialogs.HeaderDialog;
import com.dialogs.LineDialog;
import com.model.HeaderTable;
import com.model.InvoiceHeader;
import com.model.InvoiceLine;
import com.model.LineTable;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Dell
 */
public class ProjectsFrame extends javax.swing.JFrame implements ActionListener , ListSelectionListener {

    /**
     * Creates new form NewJFrame
     */
    public ProjectsFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
       jTable1.getSelectionModel().addListSelectionListener(this);

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        invNumLbl = new javax.swing.JLabel();
        invDateTF = new javax.swing.JTextField();
        cusNameTF = new javax.swing.JTextField();
        invTotalLb = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        saveMenuItem.setActionCommand("Save File");
        saveMenuItem.addActionListener (this);

        loadMenuItem = new javax.swing.JMenuItem();
        loadMenuItem.setActionCommand("Load File");
        loadMenuItem.addActionListener (this);
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Invoices Table");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "No.", "Date ", "Customer", "Total"
                }
        ));
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Create New Invoice");
        jButton1.setActionCommand("Create New Invoice");
        jButton1.addActionListener (this);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });


        jButton2.setText("Delete Invoice");
        jButton2.setActionCommand("Delete Invoice");
        jButton2.addActionListener (this);

        jLabel2.setText("Invoice Items Table");

        jLabel3.setText("Invoice No.");

        jLabel4.setText("Invoice Date");

        jLabel5.setText("Customer");

        jLabel6.setText("Invoice Total");

        invNumLbl.setText("");

        cusNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusNameTFActionPerformed(evt);
            }
        });

        jLabel7.setText("Invoice Items");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String [] {
                        "No.", "Item Name", "Item Price", "Count", "Total"
                }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Add New Item");
        jButton3.setActionCommand("Add Item");
        jButton3.addActionListener (this);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete Item");
        jButton4.setActionCommand("Delete Item");
        jButton4.addActionListener (this);

        jMenu1.setText("File");

        saveMenuItem.setText("Save File");
        jMenu1.add(saveMenuItem);

        loadMenuItem.setText("Load File");
        loadMenuItem.setToolTipText("");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadMenuItem);

        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(jButton1)
                                                .addGap(41, 41, 41)
                                                .addComponent(jButton2)
                                                .addGap(155, 155, 155)
                                                .addComponent(jButton3)
                                                .addGap(43, 43, 43)
                                                .addComponent(jButton4)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(10, 10, 10)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(36, 36, 36)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                                .addContainerGap())
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(cusNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(invNumLbl))
                                                                        .addComponent(jLabel7))
                                                                .addContainerGap())
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addComponent(invTotalLb, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(211, 211, 211))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(invDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addContainerGap())))))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(invNumLbl)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(14, 14, 14)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(invDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel5)
                                                        .addComponent(cusNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(invTotalLb)
                                                .addGap(46, 46, 46)
                                                .addComponent(jLabel7)
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton1)
                                                        .addComponent(jButton2))
                                                .addGap(57, 57, 57))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton3)
                                                        .addComponent(jButton4))
                                                .addGap(42, 42, 42))))
        );

        pack();
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void cusNameTFActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JTextField cusNameTF;
    private javax.swing.JTextField invDateTF;
    private javax.swing.JLabel invNumLbl;
    private javax.swing.JLabel invTotalLb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration

    private ArrayList<InvoiceHeader> invoices = new ArrayList<>();
    private ArrayList<InvoiceLine> invoiceLines = new ArrayList<>();
    private HeaderTable headerTable;
    private LineTable lineTable;
    private InvoiceHeader invoiceHeader;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd-mm-yyyy");
    private HeaderDialog headerDialog;
    private LineDialog lineDialog;



    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("Load File")){

            try {
                loadFiles();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        else if(e.getActionCommand().equals("Save File")){
            try {
                saveDataInHeader();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            try {
                saveDataInLines();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        else if(e.getActionCommand().equals("Create New Invoice")){
            createInvoice();
        }
        else if(e.getActionCommand().equals("Create Invoice Ok")){

           createInvoiceOk();
        }
        else if(e.getActionCommand().equals("Create Invoice Cancel")){
            createInvoiceCancel();
        }

        else if (e.getActionCommand().equals("Delete Invoice")){
            deleteInvoice();
        }

        else if (e.getActionCommand().equals("Add Item")){
            addNewItem();
        }
        else if (e.getActionCommand().equals("Add new Item OK")){
            addNewItemOk();
        }
        else if (e.getActionCommand().equals("Add New Item Cancel")){
            cancelAddingNewItem ();
            System.out.println(" add new item cancel");
        }

        else if (e.getActionCommand().equals("Delete Item")){
            deleteItem();
        }

    }
    private void loadFiles() throws Exception, ParseException {

        invoices.clear();
       JOptionPane.showMessageDialog(this,"Please select Invoice Header file",
               "Invoice Header",JOptionPane.WARNING_MESSAGE);
        JFileChooser fc = new JFileChooser();
        int option = fc.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION){
            File selectedFile = fc.getSelectedFile();
            FileReader fr = new FileReader(selectedFile);
            BufferedReader br = new BufferedReader(fr);
            String line = null;
            while ((line = br.readLine()) != null){
            String [] headerSegments = line.split(",");
            String invNumStr = headerSegments[0];
            String invDateStr = headerSegments[1];
            String customerName = headerSegments[2];
            int invNum = Integer.parseInt(invNumStr);
            Date invDate = dateFormat.parse( invDateStr);
            InvoiceHeader invHeader = new InvoiceHeader(invNum,invDate,customerName);
            invoices.add(invHeader);
            }
            br.close();
            fr.close();

            HeaderTable headerTable;
            headerTable = new HeaderTable(invoices);
            jTable1.setModel(headerTable);
            headerTable.fireTableDataChanged();
            JOptionPane.showMessageDialog(this,"Please select Invoice Line file",
                    "Invoice Line",JOptionPane.WARNING_MESSAGE);
            option = fc.showOpenDialog(this);
            if (option == JFileChooser.APPROVE_OPTION);
            selectedFile = fc.getSelectedFile();
            fr = new FileReader(selectedFile);
            br = new BufferedReader(fr);
            while ((line = br.readLine()) !=null){
                String [] lineSegments = line.split(",");
                String invNumStr = lineSegments[0];
                String item = lineSegments[1];
                String priceStr = lineSegments[2];
                String countStr = lineSegments [3];
                int invNum = Integer.parseInt(invNumStr);
                double price = Double.parseDouble(priceStr);
                int count = Integer.parseInt(countStr);
                InvoiceHeader header = findByNum(invNum);
                InvoiceLine invLine = new InvoiceLine(invNum,item,price,count,header);
                header.addLine(invLine);
            }
            br.close();
            fr.close();
        }

    }

    private void saveDataInLines() throws IOException {
        JOptionPane.showMessageDialog(this,"Please Save Header File","Invoice Line ", JOptionPane.WARNING_MESSAGE);
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION){
            File newFile = fileChooser.getSelectedFile();
          PrintWriter printWriter = new PrintWriter(newFile);
          for(InvoiceLine invoiceLine : invoiceLines){
              printWriter.printf("%d,%s,%s",invoiceLine.getNumOfItems(),invoiceLine.getProduct(),invoiceLine.getPrice(),invoiceLine.getCount());
              printWriter.println();
          }
          printWriter.close();
          JOptionPane.showMessageDialog(this,"Successfully saved", "Information",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void saveDataInHeader() throws Exception {
        JOptionPane.showMessageDialog(this,"Please Save Header File","Invoice Header ", JOptionPane.WARNING_MESSAGE);
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this);
        if (option ==JFileChooser.APPROVE_OPTION);
        File newFile = fileChooser.getSelectedFile();
        PrintWriter printWriter = new PrintWriter(newFile);
        for(InvoiceHeader header : invoices){
            printWriter.printf("%d,%s,%s",header.getNum(),header.getDate().toString(),header.getCustomerName());
            printWriter.println();
        }
        printWriter.close();
        JOptionPane.showMessageDialog(this,"File Saved","Information",JOptionPane.INFORMATION_MESSAGE);
    }


    private void addNewItem(){
        lineDialog = new LineDialog(this);
        lineDialog.setVisible(true);
    }

    private void deleteItem(){
        int indexrow = jTable2.getSelectedRow();
        lineTable.removeRow(indexrow);
        lineTable.fireTableDataChanged();
    }

    private void addNewItemOk(){
        String itemNameInput = lineDialog.getItemNameField().getText();
        String itemCountStr = lineDialog.getItemCountField().getText();
        String itemPriceStr = lineDialog.getItemPriceField().getText();
        lineDialog.setVisible(false);
        int itemCount = Integer.parseInt(itemCountStr);
        double itemPrice = Double.parseDouble(itemPriceStr);
        int num = getMaxNum() ;
        InvoiceHeader invoiceHeader = invoices.get(jTable1.getSelectedRow());
        InvoiceLine newInvoiceLine = new InvoiceLine(num,itemNameInput,itemPrice,itemCount,invoiceHeader);
        invoiceLines.add(newInvoiceLine);
        lineTable = new LineTable(invoiceLines);
        jTable2.setModel(lineTable);
        jTable2.validate();
    }

    private void cancelAddingNewItem (){
        lineDialog.setVisible(false);
    }

    private void createInvoice(){
        headerDialog = new HeaderDialog(this);
        headerDialog.setVisible(true);
    }
    private void createInvoiceOk() {

        String customerNameInput = headerDialog.getCustomerNameField().getText();
        String invoiceDateInputStr = headerDialog.getDateField().getText();
        Date invoiceDateInput = new Date();
        try {
              invoiceDateInput = dateFormat.parse(invoiceDateInputStr);
        } catch (ParseException exception) { }
        headerDialog.setVisible(false);
        int num = getMaxNum() + 1;
        InvoiceHeader newInvoiceHeader = new InvoiceHeader(num,invoiceDateInput,customerNameInput);

        invoices.add(newInvoiceHeader);
        headerTable = new HeaderTable(invoices);
        jTable1.setModel(headerTable);
       jTable1.validate();
       headerTable.fireTableDataChanged();
       lineTable.fireTableDataChanged();

    }
    private int getMaxNum (){
        int num = 0;
        for (InvoiceHeader invoiceHeader : invoices){
            if (invoiceHeader.getNum() > num){
                num = invoiceHeader.getNum();
            }
        }
        return num;
    }
    private void createInvoiceCancel(){
        headerDialog.setVisible(false);
    }
    private void deleteInvoice(){
        int rowIndex = jTable1.getSelectedRow();
        headerTable.removeRow(rowIndex);
        headerTable.fireTableDataChanged();
//        lineTable.fireTableDataChanged();
    }

    private InvoiceHeader findByNum(int num){
        for (InvoiceHeader header : invoices){
            if(header.getNum()== num){
                return header;
            }
        }
        return null;
    }

     private void jTable1RowSelected(){

      int rowIndex = jTable1.getSelectedRow();
      if (rowIndex >=0){
             headerTable = new HeaderTable(invoices);
             InvoiceHeader row = headerTable.getInvoicesFromHeader().get(rowIndex);
             invNumLbl.setText("" + row.getNum());
             invDateTF.setText(row.getDate().toString());
             cusNameTF.setText(row.getCustomerName());
             invTotalLb.setText("" + row.getInvHeaderTotal());
             ArrayList<InvoiceLine> invoiceLines = row.getLines();
             lineTable = new LineTable(invoiceLines);
             jTable2.setModel(lineTable);
             lineTable.fireTableDataChanged();
             headerTable.fireTableDataChanged();
      }
     }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        jTable1RowSelected();
    }
}